# Generated by Django 4.2.20 on 2025-05-15 10:14

import cloudinary.models
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Record",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=255)),
                ("artist", models.CharField(max_length=255)),
                (
                    "year",
                    models.PositiveIntegerField(
                        blank=True,
                        help_text="Enter a 4-digit year (e.g. 1982)",
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(1000),
                            django.core.validators.MaxValueValidator(9999),
                        ],
                    ),
                ),
                (
                    "genre",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("House", "House"),
                            ("Techno", "Techno"),
                            ("Disco", "Disco"),
                            ("Jazz", "Jazz"),
                            ("Rock", "Rock"),
                            ("Funk", "Funk"),
                            ("Hip-Hop", "Hip-Hop"),
                            ("Ambient", "Ambient"),
                            ("Drum and Bass", "Drum and Bass"),
                            ("Soul", "Soul"),
                            ("Classical", "Classical"),
                            ("Reggae", "Reggae"),
                            ("Trance", "Trance"),
                            ("Electro", "Electro"),
                            ("Synth-pop", "Synth-pop"),
                            ("Dubstep", "Dubstep"),
                        ],
                        help_text="Select a genre",
                        max_length=100,
                    ),
                ),
                (
                    "cover_image",
                    cloudinary.models.CloudinaryField(
                        blank=True, max_length=255, null=True, verbose_name="image"
                    ),
                ),
                (
                    "rating",
                    models.PositiveSmallIntegerField(
                        blank=True,
                        choices=[
                            (1, "1 Stars"),
                            (2, "2 Stars"),
                            (3, "3 Stars"),
                            (4, "4 Stars"),
                            (5, "5 Stars"),
                        ],
                        help_text="Rate this record from 1 (worst) to 5 (best)",
                        null=True,
                    ),
                ),
                ("created_on", models.DateTimeField(auto_now_add=True)),
                ("modified_on", models.DateTimeField(auto_now=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["title"],
            },
        ),
        migrations.CreateModel(
            name="Track",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=255)),
                (
                    "position",
                    models.CharField(
                        blank=True,
                        db_index=True,
                        help_text="Enter track position (e.g. A1, B2)",
                        max_length=5,
                    ),
                ),
                (
                    "duration",
                    models.CharField(
                        blank=True,
                        help_text="Enter track duration (e.g. 3:45)",
                        max_length=10,
                    ),
                ),
                (
                    "bpm",
                    models.PositiveIntegerField(
                        blank=True,
                        help_text="Enter BPM between 24 and 1000",
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(24),
                            django.core.validators.MaxValueValidator(1000),
                        ],
                    ),
                ),
                (
                    "key",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("1A", "1A - Ab Minor"),
                            ("1B", "1B - B Major"),
                            ("2A", "2A - Eb Minor"),
                            ("2B", "2B - F# Major"),
                            ("3A", "3A - Bb Minor"),
                            ("3B", "3B - D# Major"),
                            ("4A", "4A - F Minor"),
                            ("4B", "4B - A# Major"),
                            ("5A", "5A - C Minor"),
                            ("5B", "5B - D Major"),
                            ("6A", "6A - G Minor"),
                            ("6B", "6B - B Major"),
                            ("7A", "7A - D Minor"),
                            ("7B", "7B - F Major"),
                            ("8A", "8A - A Minor"),
                            ("8B", "8B - C Major"),
                            ("9A", "9A - E Minor"),
                            ("9B", "9B - G Major"),
                            ("10A", "10A - B Minor"),
                            ("10B", "10B - D Major"),
                            ("11A", "11A - F# Minor"),
                            ("11B", "11B - A Major"),
                            ("12A", "12A - Db Minor"),
                            ("12B", "12B - E Major"),
                        ],
                        help_text="Select a key using Camelot notation",
                        max_length=4,
                    ),
                ),
                (
                    "record",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="tracks",
                        to="records.record",
                    ),
                ),
            ],
            options={
                "ordering": ["position", "title"],
            },
        ),
    ]
